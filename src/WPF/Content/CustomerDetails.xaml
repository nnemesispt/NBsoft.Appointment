<UserControl x:Class="NBsoft.Appointment.WPF.Content.CustomerDetails"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:NBsoft.Appointment.WPF.Content"
             xmlns:mui="http://firstfloorsoftware.com/ModernUI"
             xmlns:validationrules="clr-namespace:NBsoft.Appointment.WPF.Validators"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="800">
    <Grid >
        <Border Background="Black" Opacity="0.1" CornerRadius="4" />
        <Grid  x:Name="GridDetails1"  Margin="{StaticResource ContentMargin}">            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="100*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="100*" />
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="Orientation" Value="Horizontal" />
                    <Setter Property="Margin" Value="0,0,0,4" />
                </Style>
                <Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
                    <Setter Property="MinWidth" Value="90" />
                    <Setter Property="Margin" Value="0,0,4,0" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                    <Setter Property="MinWidth" Value="100" />
                </Style>
                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                    <Setter Property="MinWidth" Value="80" />
                </Style>
            </Grid.Resources>

            <Border Grid.Column="0" Margin="2"  >
                <Grid >
                    <ScrollViewer  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
                        <Grid>
                            <StackPanel x:Name="Form1" Orientation="Vertical" Grid.Column="0">
                                <StackPanel>
                                    <Label Content="{DynamicResource app.customer.details.id}" Target="{Binding ElementName=TxtId}"/>
                                    <TextBox x:Name="TxtId"  Text="{Binding Customer.Id, Mode=OneTime}" IsReadOnly="True"  />
                                    <DatePickerTextBox x:Name="TxtDateCreated" Text="{Binding Customer.CreationDate, Mode=OneTime}" IsReadOnly="True"  Margin="5,0,0,0"  />
                                </StackPanel>
                                <StackPanel>
                                    <Label Content="{DynamicResource app.customer.details.name}" Target="{Binding ElementName=TxtName}"/>
                                    <TextBox x:Name="TxtName" MinWidth="280">
                                        <TextBox.Text>
                                            <Binding Path="Customer.Name" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" >
                                                <Binding.ValidationRules>
                                                    <validationrules:EmptyStringValidationRule/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                </StackPanel>
                                <StackPanel>
                                    <Label Content="{DynamicResource app.customer.details.address}" Target="{Binding ElementName=TxtAddress}"/>
                                    <TextBox x:Name="TxtAddress" Text="{Binding Customer.Address, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MinWidth="280" />
                                </StackPanel>
                                <StackPanel>
                                    <Label Content="{DynamicResource app.customer.details.postalcode}" Target="{Binding ElementName=TxtPostalCode}"/>
                                    <TextBox x:Name="TxtPostalCode" Text="{Binding Customer.PostalCode, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  />
                                    <TextBox x:Name="TxtCity" Text="{Binding Customer.City, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="155"  />
                                </StackPanel>
                                <StackPanel>
                                    <Label Content="{DynamicResource app.customer.details.country}" Target="{Binding ElementName=TxtCountry}"/>
                                    <TextBox x:Name="TxtCountry" Text="{Binding Customer.Country, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  />
                                    <Label Content="{DynamicResource app.customer.details.contact}" Target="{Binding ElementName=TxtContact}" Margin="5,0,0,0" MinWidth="10"/>
                                    <TextBox x:Name="TxtContact" Text="{Binding Customer.Contact, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" MinWidth="102" />
                                </StackPanel>
                                <StackPanel>
                                    <Label Content="{DynamicResource app.customer.details.nextappointment}" Target="{Binding ElementName=DtpNextAppointment}"/>
                                    <DatePicker x:Name="DtpNextAppointment" Text="{Binding Customer.NextAppointment, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold"  Foreground="{Binding NextAppointmentBrush}" />
                                    <mui:ModernButton Name="BtnClearPreviewDate"  IconData="{DynamicResource appbar_X_Letter}" Click="BtnClearPreviewDate_Click" />
                                </StackPanel>
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>
            <Border Grid.Column="1" Margin="10,2,2,2"  >
                <Grid>
                    <ScrollViewer  VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" >
                        <StackPanel x:Name="Form2" Orientation="Vertical" Grid.Column="0">
                            <StackPanel>
                                <Label Content="{DynamicResource app.customer.details.taxidnumber}" Target="{Binding ElementName=TxtTaxIdNumber}"/>
                                <TextBox x:Name="TxtTaxIdNumber">
                                    <TextBox.Text>
                                        <Binding Path="Customer.TaxIdNumber" Mode="TwoWay" ValidatesOnDataErrors="True" UpdateSourceTrigger="PropertyChanged" >
                                            <Binding.ValidationRules>
                                                <validationrules:EmptyStringValidationRule/>
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <Label Content="{DynamicResource app.customer.details.birthday}" Target="{Binding ElementName=DtpBirthday}" Margin="5,0,0,0" />
                                <DatePicker Name="DtpBirthday" SelectedDate="{Binding Customer.BirthDate, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                            <StackPanel>
                                <Label Content="{DynamicResource app.customer.details.mobilephone}" Target="{Binding ElementName=TxtMobilePhone}"/>
                                <TextBox x:Name="TxtMobilePhone" Text="{Binding Customer.MobilePhone, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  />
                                <Label Content="{DynamicResource app.customer.details.telephone}" Target="{Binding ElementName=TxtTelephone}" Margin="5,0,0,0" MinWidth="60" />
                                <TextBox x:Name="TxtTelephone" Text="{Binding Customer.Telephone, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  />
                            </StackPanel>
                            <StackPanel>
                                <Label Content="{DynamicResource app.customer.details.email}" Target="{Binding ElementName=TxtEMail}" />
                                <TextBox x:Name="TxtEMail" Text="{Binding Customer.EMail, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"  />
                                <Label Content="{DynamicResource app.customer.details.fax}" Target="{Binding ElementName=TxtFax}" Margin="5,0,0,0" MinWidth="25" />
                                <TextBox x:Name="TxtFax" Text="{Binding Customer.Fax, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MinWidth="30"  />                                
                            </StackPanel>
                            <StackPanel>
                                <Label Content="{DynamicResource app.customer.details.url}" Target="{Binding ElementName=TxtURL}"/>
                                <TextBox x:Name="TxtURL" Text="{Binding Customer.URL, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MinWidth="240"  />
                            </StackPanel>
                            <StackPanel>
                                <Label Content="{DynamicResource app.customer.details.iban}" Target="{Binding ElementName=TxtIBAN}" />
                                <TextBox x:Name="TxtIBAN" Text="{Binding Customer.IBAN, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MinWidth="240"  />
                            </StackPanel>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </Border>            
            <Border Grid.Column="2" Margin="1" MaxHeight="80" VerticalAlignment="Top" >
                <StackPanel x:Name="Form3" Orientation="Vertical" Margin="4" Visibility="Collapsed">
                    <TextBlock Text="{DynamicResource app.customer.details.integrationref}"  Style="{StaticResource Heading2}" />
                    <TextBox x:Name="TxtIntegrationRef" Text="{Binding Customer.IntegrationRef, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MinWidth="100"  />
                    <DatePickerTextBox x:Name="TxtIntegrationDate" Text="{Binding Customer.IntegrationDate, Mode=OneTime}" IsReadOnly="True" />
                </StackPanel>
            </Border>
            <Border Grid.Row="1" Grid.ColumnSpan="3" Margin="2" >
                <Grid >
                    <StackPanel Orientation="Vertical">                        
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="100*" />
                            </Grid.ColumnDefinitions>
                            <Label VerticalAlignment="Top" Content="{DynamicResource app.customer.details.comments}" Target="{Binding ElementName=TxtComments}"/>
                            <TextBox x:Name="TxtComments" Grid.Column="1" Text="{Binding Customer.Comments, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" MinHeight="60" MinWidth="240" AcceptsReturn="True"    />
                        </Grid>
                        <StackPanel Margin="0,5">
                            <Label Content="{DynamicResource app.customer.details.drivinglicense}" Target="{Binding ElementName=TxtDrivingLicense}"/>
                            <TextBox x:Name="TxtDrivingLicense" Text="{Binding Customer.DrivingLicense, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}"   />
                            <Label Content="{DynamicResource app.customer.details.drivinglicensetype}" Target="{Binding ElementName=TxtDrivingLicenseType}" Margin="5,0,0,0" MinWidth="10"/>
                            <TextBox x:Name="TxtDrivingLicenseType" Text="{Binding Customer.DrivingLicenseType, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" />
                            <Label Content="{DynamicResource app.customer.details.drivinglicensedate}" Target="{Binding ElementName=DtpDrivingLicenseDate}" Margin="5,0,0,0" MinWidth="10"/>
                            <DatePicker x:Name="DtpDrivingLicenseDate" Text="{Binding Customer.DrivingLicenseDate, Mode=TwoWay, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0"  />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Border>
            <Border Grid.Row="2" Grid.ColumnSpan="3" Margin="2"  BorderBrush="{DynamicResource UserAccent}" BorderThickness="1" >
                <DataGrid Name="DG1" ItemsSource="{Binding AppointmentList}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False">
                    <DataGrid.Columns>
                        <mui:DataGridTextColumn Binding="{Binding Number , Mode=OneWay}" IsReadOnly="True" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="{DynamicResource app.appointment.number}"></TextBlock>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </mui:DataGridTextColumn>
                        <mui:DataGridTextColumn Binding="{Binding AppointmentDate , Mode=OneWay, StringFormat=\{0:yyyy-MM-dd HH:mm\}}" IsReadOnly="True" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="{DynamicResource app.appointment.date}"></TextBlock>
                            </DataGridTextColumn.Header>
                        </mui:DataGridTextColumn>                        
                        <mui:DataGridTextColumn Binding="{Binding Description, Mode=OneWay}" IsReadOnly="True" Width="140" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="{DynamicResource app.appointment.description}"></TextBlock>
                            </DataGridTextColumn.Header>
                        </mui:DataGridTextColumn>
                        <mui:DataGridTextColumn Binding="{Binding Comments, Mode=OneWay}" IsReadOnly="True" Width="140" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="{DynamicResource app.appointment.comments}"></TextBlock>
                            </DataGridTextColumn.Header>
                        </mui:DataGridTextColumn>
                        <DataGridTemplateColumn x:Name="H_InternalRef" IsReadOnly="True">
                            <DataGridTemplateColumn.Header>
                                <TextBlock Text="{DynamicResource app.customer.details.link}" />
                            </DataGridTemplateColumn.Header>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <mui:BBCodeBlock BBCode="{Binding Link}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>

                        <!--<mui:DataGridComboBoxColumn x:Name="JStatus"
                                                        SelectedValueBinding ="{Binding CurrentState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                                             
                                                        DisplayMemberPath="Name" 
                                                        SelectedValuePath="Id" >
                                <DataGridComboBoxColumn.Header>
                                    <TextBlock Text="{DynamicResource D_Status}"></TextBlock>
                                </DataGridComboBoxColumn.Header>
                            </mui:DataGridComboBoxColumn>
                            <mui:DataGridCheckBoxColumn Binding="{Binding Option1}" IsReadOnly="True" >
                                <DataGridCheckBoxColumn.Header>
                                    <TextBlock Text="{DynamicResource D_Offer}"></TextBlock>
                                </DataGridCheckBoxColumn.Header>
                            </mui:DataGridCheckBoxColumn>-->

                    </DataGrid.Columns>
                </DataGrid>
            </Border>
            <GridSplitter x:Name="gridSplitter" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch" Width="3" Background="{DynamicResource UserAccent}"/>

        </Grid>
    </Grid>
</UserControl>
